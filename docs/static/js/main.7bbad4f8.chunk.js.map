{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","find","item","type","className","value","onChange","target","placeholder","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAuBhD,OACE,sBAAMC,SAlBa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAACS,GAEb,OADaA,EAAWC,MAAK,SAACC,GAAD,OAAUA,IAAST,KAMrCO,GAJTN,EAAc,IACR,CAAED,GAAR,mBAAuBO,SAW7B,SACE,uBACEG,KAAK,OACLC,UAAU,mBACVC,MAAOZ,EACPa,SA1BoB,SAACV,GACzBF,EAAcE,EAAEW,OAAOF,QA0BnBG,YAAY,2B,+BCjCPC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,8DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,IAC9B,MAAO,CACLC,GAAID,EAAIC,GACRC,OAAO,UAAAF,EAAIE,aAAJ,eAAWxB,SAAU,iBAC5Bc,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARlB,kBAWbM,GAXa,4CAAH,sDCERO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKR,UAAU,+DAAf,UACE,qBAAKsB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCDGM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdlB,mBAAS,CACjCyB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRvB,EAASC,GAAUuB,MAAK,SAACC,GACvBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDXwBK,CAAazB,GAAhCa,EAF2B,EAEhCN,KAAaY,EAFmB,EAEnBA,QAEpB,OACE,qCACE,6BAAKnB,IAEHmB,GAAW,2CAEb,qBAAKzB,UAAU,YAAf,SACGmB,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEbnBe,EAAe,WAAO,IAAD,EACI5C,mBAAS,CAC3C,cAF8B,mBACzBQ,EADyB,KACbT,EADa,KAMhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGS,EAAWmB,KAAI,SAACT,GAAD,OAAc,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCVpD2B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.7bbad4f8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const CategoryAdd = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => {\n        const find = categories.find((item) => item === inputValue);        \n        if (!find) {\n          setInputValue(\"\");\n          return [inputValue, ...categories];\n          // setCategories([...categories,`Hunter ${categories.length}`]); This way is also good\n        } else {            \n            return categories;\n        }\n      });\n      \n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input-categories\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"Insert one category\"\n      />\n    </form>\n  );\n};\nCategoryAdd.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n};","export const getGifts = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=3&api_key=txETLoL00tnzVVCyva9errUIkRQzhkuW`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifts = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title?.trim() || \"Without Title!\",\n        url: img.images?.downsized_medium.url,\n      };\n    });\n    return gifts;    \n  };","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInDown animate__delay-2s\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  \n  const {data:images, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {\n        loading && <p>Loading...</p>\n      }\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifts } from \"../helpers/getGifts\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifts(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state; // { data:[], loading: true };\n};\n","import React, { useState } from \"react\";\nimport { CategoryAdd } from \"./components/CategoryAdd\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState([\n    \"One Punch\"\n  ]);\n\n \n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <CategoryAdd setCategories={setCategories}/>\n      <hr />     \n      <ol>\n        {categories.map((category) => <GifGrid key={category} category={category} />)}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}